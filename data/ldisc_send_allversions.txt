0.52
void ldisc_send(char *buf, int len, int interactive)
{
    int keyflag = 0;
    if (len == 0) {
		void ldisc_update(int echo, int edit);
		ldisc_update(ECHOING, EDITING);
    }
    if (len < 0) {
		len = strlen(buf);
		keyflag = KCTRL('@');
    }
    if (EDITING) {
	while (len--) {
	    int c;
	    c = *buf++ + keyflag;
	    if (!interactive && c == '\r')
		c += KCTRL('@');
	    switch (term_quotenext ? ' ' : c) {


0.53
	void ldisc_send(char *buf, int len, int interactive)
	{
		int keyflag = 0;
		if (len == 0) {
			void ldisc_update(int echo, int edit);
			ldisc_update(ECHOING, EDITING);
		}
		if (len < 0) {
			len = strlen(buf);
			keyflag = KCTRL('@');
		}
		if (EDITING) {
		while (len--) {
			int c;
			c = *buf++ + keyflag;
			if (!interactive && c == '\r')
			c += KCTRL('@');
			switch (term_quotenext ? ' ' : c) {

0.54
	void ldisc_send(void *handle, char *buf, int len, int interactive)
	{
		Ldisc ldisc = (Ldisc) handle;
		int keyflag = 0;
		if (len == 0) {
			ldisc_update(ldisc->frontend, ECHOING, EDITING);
			return;
		}
		frontend_keypress(ldisc->frontend);
		if (len < 0) {
			len = strlen(buf);
			keyflag = KCTRL('@');
		}
		if (EDITING) {
		while (len--) {
			int c;
			c = *buf++ + keyflag;
			if (!interactive && c == '\r')
			c += KCTRL('@');
			switch (ldisc->quotenext ? ' ' : c) {

0.55
	void ldisc_send(void *handle, char *buf, int len, int interactive)
	{
		Ldisc ldisc = (Ldisc) handle;
		int keyflag = 0;
		if (len == 0) {
			ldisc_update(ldisc->frontend, ECHOING, EDITING);
			return;
		}
		frontend_keypress(ldisc->frontend);
		if (len < 0) {
			len = strlen(buf);
			keyflag = KCTRL('@');
		}
		if (EDITING) {
		while (len--) {
			int c;
			c = *buf++ + keyflag;
			if (!interactive && c == '\r')
			c += KCTRL('@');
			switch (ldisc->quotenext ? ' ' : c) {

0.56
	void ldisc_send(void *handle, char *buf, int len, int interactive)
	{
		Ldisc ldisc = (Ldisc) handle;
		int keyflag = 0;
		if (len == 0) {
			ldisc_update(ldisc->frontend, ECHOING, EDITING);
			return;
		}
		frontend_keypress(ldisc->frontend);
		if (len < 0) {
			len = strlen(buf);
			keyflag = KCTRL('@');
		}
		if (EDITING) {
		while (len--) {
			int c;
			c = *buf++ + keyflag;
			if (!interactive && c == '\r')
			c += KCTRL('@');
			switch (ldisc->quotenext ? ' ' : c) {

0.57
	void ldisc_send(void *handle, char *buf, int len, int interactive)
	{
		Ldisc ldisc = (Ldisc) handle;
		int keyflag = 0;
		if (len == 0) {
			ldisc_update(ldisc->frontend, ECHOING, EDITING);
			return;
		}
		frontend_keypress(ldisc->frontend);
		if (len < 0) {
			len = strlen(buf);
			keyflag = KCTRL('@');
		}
		if (EDITING) {
		while (len--) {
			int c;
			c = *buf++ + keyflag;
			if (!interactive && c == '\r')
			c += KCTRL('@');
			switch (ldisc->quotenext ? ' ' : c) {

0.58
	void ldisc_send(void *handle, char *buf, int len, int interactive)
	{
		Ldisc ldisc = (Ldisc) handle;
		int keyflag = 0;
		if (len == 0) {
			ldisc_update(ldisc->frontend, ECHOING, EDITING);
			return;
		}
		frontend_keypress(ldisc->frontend);
		if (len < 0) {
			len = strlen(buf);
			keyflag = KCTRL('@');
		}
		if (EDITING) {
		while (len--) {
			int c;
			c = *buf++ + keyflag;
			if (!interactive && c == '\r')
			c += KCTRL('@');
			switch (ldisc->quotenext ? ' ' : c) {

0.59
	void ldisc_send(void *handle, char *buf, int len, int interactive)
	{
		Ldisc ldisc = (Ldisc) handle;
		int keyflag = 0;
		if (len == 0) {
			ldisc_update(ldisc->frontend, ECHOING, EDITING);
			return;
		}
		frontend_keypress(ldisc->frontend);
		if (len < 0) {
			len = strlen(buf);
			keyflag = KCTRL('@');
		}
		if (EDITING) {
		while (len--) {
			int c;
			c = *buf++ + keyflag;
			if (!interactive && c == '\r')
			c += KCTRL('@');
			switch (ldisc->quotenext ? ' ' : c) {

0.60
	void ldisc_send(void *handle, char *buf, int len, int interactive)
	{
		Ldisc ldisc = (Ldisc) handle;
		int keyflag = 0;
		if (len == 0) {
			ldisc_update(ldisc->frontend, ECHOING, EDITING);
			return;
		}
		frontend_keypress(ldisc->frontend);
		if (len < 0) {
			len = strlen(buf);
			keyflag = KCTRL('@');
		}
		if (EDITING) {
		while (len--) {
			int c;
			c = *buf++ + keyflag;
			if (!interactive && c == '\r')
			c += KCTRL('@');
			switch (ldisc->quotenext ? ' ' : c) {

0.61
	void ldisc_send(void *handle, char *buf, int len, int interactive)
	{
		Ldisc ldisc = (Ldisc) handle;
		int keyflag = 0;
		if (len == 0) {
			ldisc_update(ldisc->frontend, ECHOING, EDITING);
			return;
		}
		frontend_keypress(ldisc->frontend);
		if (len < 0) {
			len = strlen(buf);
			keyflag = KCTRL('@');
		}
		if (EDITING) {
		while (len--) {
			int c;
			c = (unsigned char)(*buf++) + keyflag;
			if (!interactive && c == '\r')
			c += KCTRL('@');
			switch (ldisc->quotenext ? ' ' : c) {

0.62
	void ldisc_send(void *handle, char *buf, int len, int interactive)
	{
		Ldisc ldisc = (Ldisc) handle;
		int keyflag = 0;
		if (len == 0) {
			ldisc_update(ldisc->frontend, ECHOING, EDITING);
			return;
		}
		frontend_keypress(ldisc->frontend);
		if (len < 0) {
			len = strlen(buf);
			keyflag = KCTRL('@');
		}
		if (EDITING) {
		while (len--) {
			int c;
			c = (unsigned char)(*buf++) + keyflag;
			if (!interactive && c == '\r')
			c += KCTRL('@');
			switch (ldisc->quotenext ? ' ' : c) {

0.63
	void ldisc_send(void *handle, char *buf, int len, int interactive)
	{
		Ldisc ldisc = (Ldisc) handle;
		int keyflag = 0;
		if (len == 0) {
			ldisc_update(ldisc->frontend, ECHOING, EDITING);
			return;
		}
		frontend_keypress(ldisc->frontend);
		if (interactive && ldisc->term) {
			term_nopaste(ldisc->term);
		}
		if (len < 0) {
			len = strlen(buf);
			keyflag = KCTRL('@');
		}
		if (EDITING) {
		while (len--) {
			int c;
			c = (unsigned char)(*buf++) + keyflag;
			if (!interactive && c == '\r')
			c += KCTRL('@');
			switch (ldisc->quotenext ? ' ' : c) {
